<launch>

    <arg name="robot_id0" default="5826"/> <!-- 0 means not used-->
    <arg name="robot_id1" default="5957"/> <!-- 0 means not used-->
    <arg name="robot_id2" default="5808"/> <!-- 0 means not used-->
    <arg name="robot_id3" default="5762"/> <!-- 0 means not used-->
    <arg name="robot_id4" default="5728"/> <!-- 0 means not used-->
    <arg name="robot_id5" default="5486"/> <!-- 0 means not used-->
    <arg name="robot_id6" default="5678"/> <!-- 0 means not used-->
    <arg name="robot_id7" default="5676"/> <!-- 0 means not used-->
    <arg name="robot_id8" default="5810"/> <!-- 0 means not used-->
    <arg name="robot_addr0" default="192.168.0.148"/>
    <arg name="robot_addr1" default="192.168.0.168"/>
    <arg name="robot_addr2" default="192.168.0.124"/>
    <arg name="robot_addr3" default="192.168.0.200"/>
    <arg name="robot_addr4" default="192.168.0.183"/>
    <arg name="robot_addr5" default="192.168.0.162"/>
    <arg name="robot_addr6" default="192.168.0.186"/>
    <arg name="robot_addr7" default="192.168.0.134"/>
    <arg name="robot_addr8" default="192.168.0.240"/>
    
    <param name="robot_description" textfile="$(find epuck_driver_cpp_wifi)/urdf/epuck_urdf.xml"/>
        
    <group ns="epuck_robot_0">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id0)"/>
            <arg name="epuck2_address" value="$(arg robot_addr0)"/>
            <arg name="epuck2_name" value="epuck_robot_0"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="-0.4"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_0_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_0/base_link 30"/>-->
    </group>

    <group if="$(eval arg('robot_id1') >0)" ns="epuck_robot_1">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id1)"/>
            <arg name="epuck2_address" value="$(arg robot_addr1)"/>
            <arg name="epuck2_name" value="epuck_robot_1"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="-0.3"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_1_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_1/base_link 30"/>-->
    </group>

    <group if="$(eval arg('robot_id2') >0)" ns="epuck_robot_2">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id2)"/>
            <arg name="epuck2_address" value="$(arg robot_addr2)"/>
            <arg name="epuck2_name" value="epuck_robot_2"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="-0.2"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_2_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_2/base_link 30"/>-->
    </group>
    
    <group if="$(eval arg('robot_id3') >0)" ns="epuck_robot_3">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id3)"/>
            <arg name="epuck2_address" value="$(arg robot_addr3)"/>
            <arg name="epuck2_name" value="epuck_robot_3"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="-0.1"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_3_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_3/base_link 30"/>-->
    </group> 

    <group if="$(eval arg('robot_id4') >0)" ns="epuck_robot_4">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id4)"/>
            <arg name="epuck2_address" value="$(arg robot_addr4)"/>
            <arg name="epuck2_name" value="epuck_robot_4"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="0.0"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_3_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_3/base_link 30"/>-->
    </group> 

    <group if="$(eval arg('robot_id5') >0)" ns="epuck_robot_5">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id5)"/>
            <arg name="epuck2_address" value="$(arg robot_addr5)"/>
            <arg name="epuck2_name" value="epuck_robot_5"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="0.1"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_3_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_3/base_link 30"/>-->
    </group> 

    <group if="$(eval arg('robot_id6') >0)" ns="epuck_robot_6">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id6)"/>
            <arg name="epuck2_address" value="$(arg robot_addr6)"/>
            <arg name="epuck2_name" value="epuck_robot_6"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="0.2"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_3_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_3/base_link 30"/>-->
    </group> 

    <group if="$(eval arg('robot_id7') >0)" ns="epuck_robot_7">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id7)"/>
            <arg name="epuck2_address" value="$(arg robot_addr7)"/>
            <arg name="epuck2_name" value="epuck_robot_7"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="0.3"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_3_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_3/base_link 30"/>-->
    </group> 

    <group if="$(eval arg('robot_id8') >0)" ns="epuck_robot_8">
        <include file="$(find epuck_driver_cpp_wifi)/launch/epuck2_controller.launch">
            <arg name="epuck2_id" value="$(arg robot_id8)"/>
            <arg name="epuck2_address" value="$(arg robot_addr8)"/>
            <arg name="epuck2_name" value="epuck_robot_8"/>
            <arg name="cam_en" value="false"/>
            <arg name="floor_en" value="false"/>
            <arg name="xpos" value="0.4"/>
            <arg name="ypos" value="0.0"/>
            <arg name="theta" value="0.0"/>
            <arg name="is_single_robot" value="0"/>
        </include>
        <!--<node pkg="tf" type="static_transform_publisher" name="epuck_robot_3_tf" args="0 0 0 0 0 0 /base_link /epuck_robot_3/base_link 30"/>-->
    </group>  

    <!--<node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find epuck_driver_cpp)/config/multi_epuck2_driver_rviz.rviz"/>-->

</launch>
